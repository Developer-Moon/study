from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict, KFold
from sklearn.metrics import r2_score, accuracy_score
from sklearn.svm import SVR
import numpy as np
from sklearn.datasets import load_diabetes


#1. 데이터
datasets = load_diabetes()
x = datasets['data']
y = datasets['target']

x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.8, random_state=9)
                      
n_splits = 5              
kfold = KFold(n_splits=n_splits, shuffle=True, random_state=66)
                    
                                      
#2. 모델구성
model = SVR()


#3. 컴파일, 훈련, 평가, 예측
scores = cross_val_score(model, x_train, y_train, cv=kfold)               # cv=5 라면 kfold를 5로 쓴다
y_predict = cross_val_predict(model, x_test, y_test, cv=kfold)
r2 = r2_score(y_test, y_predict)

print('r2 :', scores, '\ncross_val_score :' , round(np.mean(scores), 4)) # 4번째까지 출력 (반올림을 5번째 자리에서)
print(y_predict)
print('cross_val_predict r2 : ', r2)

# r2 : [0.13953982 0.12711314 0.1313664  0.12057699 0.07951595] 
# cross_val_score : 0.1196
# [119.82200946 136.4886883  137.26546127 126.25451362 136.32160017
#  132.48213957 135.44115877 130.34459659 127.15451458 128.86303577
#  136.42936209 136.21082011 129.12245486 134.10786909 117.17496789
#  119.96332438 132.02596639 119.53911882 134.09163024 125.25573941
#  131.26620922 125.42890572 124.86888808 121.37973813 134.20648371
#  141.38114171 140.47994698 127.41099066 126.92001266 141.83096555
#  127.26092698 133.99973981 132.8374701  144.88091497 128.62083126
#  128.69804571 121.93765757 122.02961038 141.7177036  131.7965883
#  127.32976208 120.20305658 123.78330534 119.77854346 136.78655816
#  120.64509944 117.61708883 124.57395068 126.37046684 123.51537473
#  128.99183729 127.7221841  115.57336819 120.03849788 124.62437625
#  132.15164824 128.53580675 139.80448958 133.96887191 135.75636324
#  131.06319393 124.04669445 129.90603992 129.33253079 135.9045413
#  122.54846096 136.03173557 127.83301351 133.35444986 122.71084985
#  126.07586593 127.05126626 135.86812591 131.1236958  128.67315948
#  130.93189257 131.47283088 133.90557598 125.90887907 133.47029424
#  121.33439803 142.59823528 123.75730446 130.98925362 123.17927598
#  123.18008544 130.55748577 120.62469684 140.50444226]
# cross_val_predict r2 :  0.005016787381667109